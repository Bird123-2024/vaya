version: 2
jobs:

  install:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Installing Dependencies
          command: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Compiling Binaries
          command: yarn run pack
      - persist_to_workspace:
          root: .
          paths:
            - packed

  test-lint:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Linting Code
          command: yarn test-lint

  test-unit:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Running Unit Tests
          command: yarn test-unit

  deploy:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Compressing Binaries
          command: yarn gzip
      - run:
          name: Preparing Go
          command: sudo apt-get install golang-go; export GOPATH=$HOME/go
      - run:
          name: Installing Uploader
          command: go get github.com/tcnksm/ghr
      - run:
          name: Uploading Binaries
          command: ghr -u "zeit" -r "now-cli" --replace `git describe --tags` packed/

workflows:
  version: 2
  compile:
    jobs:
      - install
      - build:
          requires:
            - install
      - test-lint:
          requires:
            - build
      - test-unit:
          requires:
            - build
      - deploy:
          requires:
            - test-lint
            - test-unit
